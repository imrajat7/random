{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rajat/Desktop/learning/hello-next/pages/fruit/[name]/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nexport var __N_SSG = true;\nexport default function FruitName(props) {\n  _s();\n\n  var router = useRouter();\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Hello from outer \", \"but value is \".concat(props.randomValue), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n}\n\n_s(FruitName, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = FruitName;\n\nvar _c;\n\n$RefreshReg$(_c, \"FruitName\");","map":{"version":3,"sources":["/home/rajat/Desktop/learning/hello-next/pages/fruit/[name]/index.tsx"],"names":["useRouter","FruitName","props","router","isFallback","randomValue"],"mappings":";;;;;AACA,SAASA,SAAT,QAA0B,aAA1B;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACrC,MAAMC,MAAM,GAAGH,SAAS,EAAxB;;AACA,MAAIG,MAAM,CAACC,UAAX,EAAuB;AACnB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBAAO;AAAA,2DAAsCF,KAAK,CAACG,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GANuBJ,S;UACLD,S;;;KADKC,S","sourcesContent":["import { GetStaticPaths, GetStaticProps } from \"next\";\nimport { useRouter } from \"next/router\";\n\nexport default function FruitName(props) {\n    const router = useRouter();\n    if (router.isFallback) {\n        return <h1>loading....</h1>;\n    }\n    return <h1>Hello from outer {`but value is ${props.randomValue}`} </h1>;\n}\n\nexport const getStaticProps: GetStaticProps = async (context) => {\n    return {\n        props: {\n            randomValue: Math.ceil(Math.random() * 10),\n        },\n    };\n};\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n    return {\n        paths: [{ params: { name: \"hello\" } }, { params: { name: \"world\" } }],\n        fallback: true,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}